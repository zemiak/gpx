package com.zemiak.ggz;

import java.io.IOException;
import java.nio.file.FileSystem;
import java.nio.file.Files;
import java.time.Instant;
import java.util.List;
import org.w3c.dom.Node;

public class GpxFile {
    private final String fileName;
    private final FileSystem zipfs;

    public GpxFile(String fileName, FileSystem zipfs) {
        this.fileName = fileName;
        this.zipfs = zipfs;
    }

    public String getHeader() {
        return "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n" +
"<gpx xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" version=\"1.0\" creator=\"Groundspeak Pocket Query\" xsi:schemaLocation=\"http://www.topografix.com/GPX/1/0 http://www.topografix.com/GPX/1/0/gpx.xsd http://www.groundspeak.com/cache/1/0/1 http://www.groundspeak.com/cache/1/0/1/cache.xsd\" xmlns=\"http://www.topografix.com/GPX/1/0\">\n" +
"  <name>{{NAME}}</name>\n" +
"  <desc>Geocache file generated by Groundspeak</desc>\n" +
"  <author>Groundspeak</author>\n" +
"  <email>contact@groundspeak.com</email>\n" +
"  <time>{{TIME}}</time>\n" +
"  <keywords>cache, geocache, groundspeak</keywords>\n" +
"  <bounds minlat={{MINLAT.}} minlon={{MINLON.}} maxlat={{MAXLAT.}} maxlon={{MAXLON.}} />"
        .replace("{{NAME}}", fileName)
        .replace("{{TIME}}", Instant.now().toString())
                ;
    }

    public void flushFile(List<Node> gpxEntries,
            LatLonBox box) throws IOException {
        String gpxFileHeader = box.updateGpxHeader(getHeader());
        StringBuilder text = new StringBuilder(gpxFileHeader);
        gpxEntries.forEach(e -> text.append(e.toString()));
        text.append(endGpxFile());

        Files.write(zipfs.getPath("data", fileName + ".gpx"), text.toString().getBytes());
    }

    private String endGpxFile() {
        return "</gpx>\n";
    }
}
